version: "3"
services:
  strapi:
    container_name: strapi
    build: 
      context: ./projet-dev
      dockerfile: Dockerfile
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: strapiDB
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      NODE_ENV: development
    ports:
      - "1337:1337"
    networks:
      - strapi-app
    depends_on:
      - strapiDB
    restart: unless-stopped

  strapiDB:
    container_name: strapiDB
    env_file: .env
    image: postgres
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "5432:5432"
    networks:
      - strapi-app
    restart: unless-stopped

  strapi-frontend:
    container_name: strapi-frontend
    build:
      context: ./opsci-strapi-frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    depends_on:
      - strapi
    restart: unless-stopped
    
networks:
  strapi-app:
    driver: bridge